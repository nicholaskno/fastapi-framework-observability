services:
  db:
    image: postgres:16
    container_name: observability_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=teste123
      - POSTGRES_DB=observability
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 10s
      timeout: 20s
      retries: 10
    networks:
      - proxynet

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: observability_rabbitmq
    ports:
      - "5672:5672"    # connector
      - "15672:15672"  # webserver
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - proxynet

  app:
    build: .
    image: observability:1
    container_name: observability
    command:  /bin/bash -c "sh setup.sh && tail -F anything"
    ports:
      - "5000:5000"
    environment:
      PYTHONPATH: /var/www/observability/
    volumes:
      - './:/var/www/observability/'
    depends_on:
      db:
        condition: service_healthy

    networks:
      - proxynet

  otel:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: observability_otel_collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./infra/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
      - "13133:13133" # Health Check Extension
      - "8888:8888" # Prometheus metrics
    depends_on:
      - tempo
    networks:
      - proxynet

  tempo:
    image: grafana/tempo:latest
    container_name: observability_tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./infra/tempo.yaml:/etc/tempo.yaml
      # - ./tempo-data:/tmp/tempo
    ports:
      - "3200"  # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
    networks:
      - proxynet

  loki:
    image: grafana/loki:3.5.0
    container_name: observability_loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - proxynet

  prometheus:
      image: prom/prometheus
      container_name: observability_prometheus
      volumes:
        - ./infra/prometheus.yaml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
      networks:
        - proxynet

  grafana:
    image: grafana/grafana:9.3.2
    container_name: observability_grafana
    volumes:
      - ./infra/grafana/provisioning/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
    networks:
      - proxynet

networks:
  proxynet:
    name: observability_net
